import { useState } from 'react';
import '../../styles/DonateBlood.scss';
const healthQuestions = [
  'B·∫°n ƒë√£ t·ª´ng hi·∫øn m√°u ch∆∞a ?',
  'Hi·ªán t·∫°i, b·∫°n c√≥ b·ªã c√°c b·ªánh: vi√™m kh·ªõp, ƒëau d·∫° d√†y, vi√™m gan, v√†ng da, b·ªánh tim, huy·∫øt √°p th·∫•p/cao, ho k√©o d√†i,b·ªánh m√°u, lao ?',
  'Trong v√≤ng 12 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ m·∫Øc c√°c b·ªánh v√† ƒë√£ ƒë∆∞·ª£c ƒëi·ªÅu tr·ªã kh·ªèi: S·ªët r√©t, Giang mai, Lao, Vi√™m n√£o, Ph·∫´u thu·∫≠t ngo·∫°i khoa ?',
  'Trong v√≤ng 12 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ d∆∞·ª£c truy·ªÅn m√°u v√† c√°c ch·ªÉ ph·∫©m m√°u ?',
  'Trong v√≤ng 12 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ ti√™m Vaccin b·ªánh d·∫°i ?',
  'Trong v√≤ng 6 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ tri·ªáu ch·ª©ng sau kh√¥ng: S√∫t c√¢n nhanh kh√¥ng r√µ nguy√™n nh√¢n ?',
  'Trong v√≤ng 6 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ tri·ªáu ch·ª©ng sau kh√¥ng: N·ªïi h·∫°ch k√©o d√†i ?',
  'Trong v√≤ng 6 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ tri·ªáu ch·ª©ng sau kh√¥ng: Ch·ªØa rƒÉng, ch√¢m c·ª©u ?',
  'Trong v√≤ng 6 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ tri·ªáu ch·ª©ng sau kh√¥ng: XƒÉm m√¨nh, x·ªè l·ªó tai, l·ªó m≈©i ?',
  'Trong v√≤ng 6 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ tri·ªáu ch·ª©ng sau kh√¥ng: S·ª≠ d·ª•ng ma tu√Ω ?',
  'Trong v√≤ng 6 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ tri·ªáu ch·ª©ng sau kh√¥ng: Quan h·ªá t√¨nh d·ª•c v·ªõi ng∆∞·ªùi nhi·ªÖm HIV ho·∫∑c ng∆∞·ªùi c√≥ h√†nh v√¨ nguy c∆° l√¢y nhi·ªÖm HIV ?',
  'Trong v√≤ng 6 th√°ng g·∫ßn ƒë√¢y, b·∫°n c√≥ tri·ªáu ch·ª©ng sau kh√¥ng: QUan h·ªá t√¨nh d·ª•c v·ªõi ng∆∞·ªùi c√πng gi·ªõi ?',
  'Trong v√≤ng 7 ng√†y g·∫ßn ƒë√¢y, b·∫°n c√≥: B·ªã c·∫£m c√∫m ( ho, nh·ª©c ƒë·∫ßu, s·ªët... ) ?',
  'Trong v√≤ng 7 ng√†y g·∫ßn ƒë√¢y, b·∫°n c√≥: D√πng thu·ªëc kh√°ng sinh: Aspirin, Corticol ?',
  'Trong v√≤ng 7 ng√†y g·∫ßn ƒë√¢y, b·∫°n c√≥: Ti√™m Vacxin ph√≤ng: Vi√™m gan si√™u vi B, Human Papilloma Virus,... ?',
  'B·∫°n c√≥ ƒë·ªìng √Ω x√©t nghi·ªám HIV, nh·∫≠n th√¥ng b√°o v√† ƒë∆∞·ª£c t∆∞ v·∫•n khi k·∫øt qu·∫£ x√©t nghi·ªám HIV nghi ng·ªù ho·∫∑c d∆∞∆°ng t√≠nh ?',
  'B·∫°n c√≥ ƒë·ªìng √Ω hi·∫øn m√°u t√¨nh nguy·ªán v√† tu√¢n th·ªß c√°c quy ƒë·ªãnh c·ªßa ch∆∞∆°ng tr√¨nh ?'
];

const form = {
  fullName: '',
  dob: '',
  // appointmentDate: '',
  gender: '',
  weight: '',
  bloodId: 0,
  amountBloodMl: 0,
  cccdNumber: '',
  phone: '',
  address: '',
  agree: false,
  // healthQuestions: Array(12).fill(''),
}
const DonateBlood = () => {
  const [formData, setFormData] = useState(form);
  const handleChange = (e) => {
      const { name, value } = e.target;
      setFormData(prev => ({ ...prev, [name]: value }));
  }
  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Form submitted:', formData);
  }

  return (
    <div className="donate-blood-page blood-register-layout">
      <div className="donate-title-section">
        <div className="donate-title-content">
          <h2 className="main-title">
            <span className="blood-bridge">Blood Bridge</span>
            <span className="features-text">ƒêƒÉng k√Ω X√©t Nghi·ªám M√°u</span>
          </h2> 
          <div className="title-decoration">
            <div className="decoration-line"></div>
            <div className="decoration-circle">ü©∏</div>
            <div className="decoration-line"></div>
          </div>
        </div>
      </div>
      <div className="donate-form-section">
        {/* FORM ƒëi·ªÅn th√¥ng tin */}
        <form className="donate-blood-form" onSubmit={e => handleSubmit(e)}>
          <fieldset>
            <legend>Th√¥ng tin c√° nh√¢n</legend>
            <div className="form-row">

              {/* FULLNAME */}
              <label>
                <span className="label-row">H·ªç v√† t√™n <span>*</span></span>
                <input name="fullName" value={formData.fullName} onChange={e => handleChange(e)} required />
              </label>

              {/* DOB */}
              <label>
                <span className="label-row">Ng√†y sinh <span>*</span></span> 
                <input type="date" name="dob" value={formData.dob} onChange={e => handleChange(e)} required />
              </label>

              {/* GENDER */}
              <label>
                <span className="label-row">Gi·ªõi t√≠nh <span>*</span></span>
                <select name="gender" value={formData.gender} onChange={e => handleChange(e)} required>
                  <option disabled value="" selected>Ch·ªçn gi·ªõi t√≠nh</option>
                  <option value="Nam">Nam</option>
                  <option value="N·ªØ">N·ªØ</option>
                </select>
              </label>
              {/* WEIGHT */}
              <label>
                <span className='label-row'>C√¢n n·∫∑ng<span>*</span></span>
                  <input type="number" name="weight" min="1" max="200" step="0.1"  onChange={e => handleChange(e)} required/>
              </label>
              {/* BLOOD TYPE */}
              <label>
                <span className="label-row">Nh√≥m m√°u <span> *</span></span>
                <select name="bloodType" value={formData.bloodId} onChange={e => handleChange(e)} required>
                  <option disabled value="0" selected>Ch·ªçn nh√≥m m√°u</option>
                  <option value="1">A+</option>
                  <option value="2">A-</option>
                  <option value="3">B+</option>
                  <option value="4">B-</option>
                  <option value="5">AB+</option>
                  <option value="6">AB-</option>
                  <option value="7">O+</option>
                  <option value="8">O-</option>
                </select>
              </label>

              {/* BLOOD AMOUNT */}
              <label><span className="label-row">L∆∞·ª£ng m√°u s·∫Ω hi·∫øn (ml)<span> *</span></span> 
                <input type="number" name="amountBloodMl" value={formData.amountBloodMl} min="50" max="150" step="0.1" onChange={e => handleChange(e)} required />
              </label>

              {/* CMND */}
              <label><span className="label-row">S·ªë CCCD <span> *</span></span>
                <input name="cccdNumber" value={formData.cccdNumber} onChange={e => handleChange(e)} required />
              </label>

              {/* NUMBER PHONE */}
              <label><span className="label-row">S·ªë ƒëi·ªán tho·∫°i <span> *</span></span>
                <input name="phone" value={formData.phone} onChange={e => handleChange(e)} required />
              </label>

              {/* ADDRESS */}
              <label><span className="label-row">ƒê·ªãa ch·ªâ th∆∞·ªùng tr√∫<span> *</span></span>
                <input name="address" value={formData.address} onChange={e => handleChange(e)} required/>
              </label>
            </div>
          </fieldset>
          
          {/* <fieldset>
            <legend>C√¢u h·ªèi s·ª©c kh·ªèe</legend>
            {healthQuestions.map((q, idx) => (
              <div className="health-question" key={idx}>
                <span>{idx + 1}. {q}</span>
                <label>
                  <input type="radio" name={`health_${idx}`} value="C√≥" checked={formData.healthQuestions[idx] === 'C√≥'} onChange={e => handleChange(e)} required /> C√≥
                </label>
                <label>
                  <input type="radio" name={`health_${idx}`} value="Kh√¥ng" checked={formData.healthQuestions[idx] === 'Kh√¥ng'} onChange={e => handleChange(e)} required /> Kh√¥ng
                </label>
              </div>
            ))}        
          </fieldset> */}
          
          <div className="form-row agree-row">
            <label className="agree-label">
              <input type="checkbox" name="agree" checked={formData.agree} onChange={e => handleChange(e)} required /> 
              T√¥i cam k·∫øt c√°c th√¥ng tin tr√™n l√† ƒë√∫ng s·ª± th·∫≠t v√† t·ª± nguy·ªán ƒëƒÉng k√Ω hi·∫øn m√°u.
            </label>
          </div>

          <button type="submit" className="submit-btn">G·ª≠i ƒëƒÉng k√Ω</button>
        </form>
      </div>
    </div>
  );
};

export default DonateBlood;